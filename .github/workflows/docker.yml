name: Publish Docker Image

on:
  push:
    branches:
      - main
    tags:
      - '*'

jobs:
  build:
    name: Build Docker
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Replace Latest To Main
        if: github.ref == 'refs/heads/main'
        run: |
          sed -i "s/alist:latest/alist:main/g" ./Dockerfile
          cat ./Dockerfile

      - name: Replace Latest To Tag
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          sed -i "s/alist:latest/alist:${{ github.ref_name }}/g" ./Dockerfile
          cat ./Dockerfile

      - name: Docker Meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ secrets.DOCKERHUB_USERNAME }}/alist-aria2
            ghcr.io/${{ github.repository_owner }}/alist-aria2
          labels: |
            org.opencontainers.image.authors=${{ secrets.Image_Authors }}

      - name: Set Up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: all

      - name: Set Up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3
        with:
          version: latest

      - name: Login To DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login To Github Package
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Docker And Push
        if: startsWith(github.ref, 'refs/tags/') || github.ref == 'refs/heads/main'
        id: docker
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/amd64,linux/arm64,linux/arm/v7,linux/386,linux/arm/v6,linux/s390x
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
